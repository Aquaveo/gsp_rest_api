# CI Pipeline
name: Build 

on: 
  push: 
    branches:
      - "*"
    tags: 
      - "*"

  pull_request:
    branches:
      - "*"

env:
  HELM_CHART: ${{ github.workspace }}/helm/gsprestapi
  HELM_REPO_USERNAME: ${{ secrets.HELM_REPO_USERNAME }}
  HELM_KEY_PASSPHRASE: ${{ secrets.HELM_KEY_PASSPHRASE }}
  HELM_REPO_PASSWORD: ${{ secrets.HELM_REPO_PASSWORD }}
  CI_REGISTRY_USER: ${{ secrets.CI_REGISTRY_USER }}
  CI_REGISTRY_PASSWORD: ${{ secrets.CI_REGISTRY_PASSWORD }}
  CI_REGISTRY_IMAGE: docker.aquaveo.com/tethys/gsprestapi
  CI_COMMIT_SHORT_SHA: ${{ github.sha }}
  ECCR_USER: ${{ secrets.ECCR_USER }}
  ECCR_PASSWORD: ${{ secrets.ECCR_PASSWORD }}
  KANIKO_DOCKERFILE: ${{ github.workspace }}/Dockerfile
  KANIKO_CONTEXT: ${{ github.workspace }}


jobs:
  check-helm: 
      name: Check Helm
      runs-on: ubuntu-latest
      if: github.ref != 'refs/heads/master' && !startsWith(github.ref, 'refs/tags/')
      container:
        image: docker.aquaveo.com/tethys/kubernetes/helm-docker:0.7.1
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            submodules: false
          
        - name: Ensure HELM_CHART is set
          run: |
            if [[ -z "${HELM_CHART}" ]]; then
              echo "HELM_CHART must be set" >&2
              exit 1
            fi

        - name: Lint Helm Chart
          run: helm lint $HELM_CHART

        - name: Run Check Helm Script
          run: |
            chmod +x ./check_helm_chart
            ./check_helm_chart $HELM_CHART

  update-helm: 
    runs-on: ubuntu-latest
    container: docker.aquaveo.com/tethys/kubernetes/helm-docker:0.7.1s
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Ensure Required Variabvles Are Set
        run: |
          : "${HELM_CHART:?must be set}"
          : "${HELM_KEY_PASSPHRASE:?must be set}"
          : "${HELM_REPO_PASSWORD:?must be set}"

      - name: Run Helm Lint
        run: helm lint $HELM_CHART

      - name: Run CHeck Helm Script and Upload
        run: |
          chmod +x ./check_helm_chart
          ./check_helm_chart $HELM_CHART --upload

  kaniko-build:
    runs-on: ubuntu-latest
    container: gcr.io/kaniko-project/executor:debug-v0.23.0

    strategy:
      matrix:
        build_type: [commit, tag, stable]
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with: 
          submodules: true
          fetch-depth: 0

      - name: Setup Docker Config File
        run: |
          echo '{
            "auths": {
              "'$CI_REGISTRY'": {"username":"'$CI_REGISTRY_USER'", "password":"'$CI_REGISTRY_PASSWORD'"},
              "eccr.ecmwf.int/harbor": {"username":"'$ECCR_USER'", "password":"'$ECCR_PASSWORD'"}
            }
          }' > /kaniko/.docker/config.json

      - name: Set Build Variables Based on Matrix
        run: |
          case "${{ matrix.build_type }}" in
            commit)
              echo "KANIKO_DEST=$$CI_REGISTRY_IMAGE/dev:$CI_COMMIT_SHORT_SHA" >> $GITHUB_ENV
              ;;
            tag)
              echo "KANIKO_DEST=eccr.ecmwf.int/geoglows_api/geoglows_api:${{ github.ref_name }}" >> $GITHUB_ENV
              echo "KANIKO_DEST=eccr.ecmwf.int/geoglows_api/geoglows_api:latest" >> $GITHUB_ENV
              ;;
            stable)
              echo "KANIKO_DEST=eccr.ecmwf.int/geoglows_api/geoglows_api:stable" >> $GITHUB_ENV
              ;;
          esac

      - name: Ensure Required Variables Are Set
        run: |
          : "${KANIKO_DOCKERFILE:?must be set}"
          : "${KANIKO_CONTEXT:?must be set}"
          : "${KANIKO_DESTINATIONS:?must be set}"

      - name: Run Kaniko Build & Push
        run: |
          /kaniko/executor \
            --context ${{ github.workspace }} \
            --dockerfile ${{ github.workspace }}/Dockerfile \
            --destination $KANIKO_DEST \
            --cache=true \
            --cache-repo $CI_REGISTRY_IMAGE/cache \
            --force
            
        
              
        
        
